# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE when there is a push to the main branch.
#
# To configure this workflow: 
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Create and configure a Workload Identity Provider for GitHub (https://github.com/google-github-actions/auth#setting-up-workload-identity-federation)
#
# 3. Change the values for the GAR_LOCATION, GKE_ZONE, GKE_CLUSTER, IMAGE, REPOSITORY and DEPLOYMENT_NAME environment variables (below).
#
# For more support on how to run the workflow, please visit https://github.com/google-github-actions/setup-gcloud/tree/master/example-workflows/gke-kustomize

name: Build and Deploy to GKE

on:
  push:
    branches:
      - dev

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GAR_LOCATION: us-west2  # TODO: update region of the Artifact Registry
  GKE_CLUSTER: casbu     # TODO: update to cluster name
  GKE_ZONE: us-west2 # TODO: update to cluster zone
  DEPLOYMENT_NAME: casbu # TODO: update to deployment name
  REPOSITORY: casbu # TODO: update to Artifact Registry docker repository
  IMAGE: awaymail

permissions:
    contents: 'read'
    id-token: 'write'

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - id: 'auth'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: ${{ secrets.GKE_SA_KEY }}

    - id: 'get-credentials'
      uses: 'google-github-actions/get-gke-credentials@v0'
      with:
        cluster_name: 'casbu'
        location: 'us-west2'

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: casbu-334721 
        
    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        #gcloud auth configure-docker 
        gcloud auth configure-docker us-west2-docker.pkg.dev
    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        credentials: ${{ secrets.GKE_SA_KEY }}

    # Build the Docker image
    - name: Build
      run: |-
        docker build \
          -t "$GAR_LOCATION-docker.pkg.dev/casbu-334721/$REPOSITORY/$IMAGE:dev-$GITHUB_SHA" . \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          
  
          
        
    # Push the Docker image to Google Artifact Registry
    - name: Publish
      run: |-
        docker push "$GAR_LOCATION-docker.pkg.dev/casbu-334721/$REPOSITORY/$IMAGE:dev-$GITHUB_SHA"
    # Set up kustomize
    - name: Set up Kustomize
      run: |-
        curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
        chmod u+x ./kustomize
    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      run: |-
        gcloud components install gke-gcloud-auth-plugin
        gcloud container clusters get-credentials ${{ env.GKE_CLUSTER }} \
          --zone ${{ env.GKE_ZONE }} \
          --project casbu-334721 
        kubectl set image -n dev deployment.apps/awaymail casbu=$GAR_LOCATION-docker.pkg.dev/casbu-334721/$REPOSITORY/$IMAGE:dev-$GITHUB_SHA
        
    - name: Send custom JSON data to Slack workflow
      id: slack
      uses: slackapi/slack-github-action@v1.17.0
      with:
         # For posting a rich message using Block Kit

         payload: |
           {
               "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
               "blocks": [
                  {
                      "type": "section",
                      "text": {
                                 "type": "mrkdwn",
                                 "text": "result of awaymail  Deploy: ${{ job.status }} \n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                }
              }
            ]
           }
      env:
         SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
         SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
      if: always()
